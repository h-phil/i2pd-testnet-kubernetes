# Default values for i2pd-chart.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: purplei2p/i2pd
  pullPolicy: Always
  # Overrides the image tag whose default is the chart appVersion.
  tag: latest

i2pd:
  #configfile: i2pd.conf
  reseed:
    zipfile:
      enabled: true
  tunnels:
    enabled: true
    configs:
      - name: httpserver
        type: http
        hostFromService: nginx
        port: 8080
        keys: httptest.dat
  config: |
    log = stdout
    loglevel = debug
    
    ipv4 = true
    ipv6 = false
    
    # netid = 2 for main network
    # netid 16 - 254 for forks and test networks
    # https://geti2p.net/spec/proposals/147-transport-network-id-check
    netid = 32
    # do not check if ip is in reserved range
    # working after https://github.com/PurpleI2P/i2pd/commit/d724948d031dbd4fe05f106c0b07a1c58b007987
    reservedrange = false
    # router floodfill
    floodfill = true
    # interface to bind to
    ifname = eth0
    # If true, assume we are behind NAT (default: true)
    nat = false
    
    [ntcp2]
    enabled = true
    published = true
    
    [ssu2]
    enabled = true
    published = true
    
    [http]
    enabled = true
    address = 0.0.0.0
    port = 7070
    strictheaders = false
    
    [httpproxy]
    enabled = true
    address = 0.0.0.0
    port = 4444
    
    [socksproxy]
    enabled = true
    address = 0.0.0.0
    port = 4447
    
    [sam]
    enabled = true
    address = 0.0.0.0
    port = 7656
    
    [upnp]
    enabled = false
    
    [reseed]
    verify = false
    zipfile = /home/i2pd/data/seed.zip
    threshold = 0
    urls =
    yggurls =
    
    [i2pcontrol]
    enabled = true
    address = 0.0.0.0
    port = 7650
    
    #[limits]
    # transittunnels = 2500
    
    #[exploratory]
    #inbound.length = 0
    #inbound.quantity = 1
    #outbound.length = 0
    #outbound.quantity = 1

trafficControl:
  enabled: true
  image:
    # see https://github.com/h-phil/alpine-iproute2
    repository: hphil/alpine-iproute2
    tag: latest
  init: |
    #!/bin/sh
    set -ex
    # delay of 40+-20ms (normal distribution) per pod
    # 0.1% loss with higher successive probablity (packet burst lossess)
    tc qdisc add dev eth0 root netem delay 40ms 20ms distribution normal loss 0.1% 25%

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: false
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
# capabilities:
#   drop:
#   - ALL
# readOnlyRootFilesystem: true
# runAsNonRoot: true
# runAsUser: 1000

console:
  enabled: true
  service:
    type: LoadBalancer
    port: 7070

i2pcontrol:
  enabled: false
  service:
    type: LoadBalancer
    port: 7650

httpproxy:
  enabled: true
  service:
    type: LoadBalancer
    port: 4444

socksproxy:
  enabled: false
  service:
    type: LoadBalancer
    port: 4447

sam:
  enabled: false
  service:
    type: LoadBalancer
    port: 7656

ingress:
  enabled: false
#  className: ""
#  annotations: {}
#    # kubernetes.io/ingress.class: nginx
#    # kubernetes.io/tls-acme: "true"
#  hosts:
#    - host: chart-example.local
#      paths:
#        - path: /
#          pathType: ImplementationSpecific
#  tls: []
#  #  - secretName: chart-example-tls
#  #    hosts:
#  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

nodeSelector: {}

tolerations: []

affinity: {}

nginx:
  enabled: true
  image:
    repository: nginx
    tag: latest
  service:
    port: 8080
